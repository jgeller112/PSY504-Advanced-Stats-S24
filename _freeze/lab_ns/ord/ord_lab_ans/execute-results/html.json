{
  "hash": "3b547d0e38cb619705220de7f2cf27fa",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Ordinal Regression Lab Answers\"\noutput: \n  tufte::tufte_html:\n    css: \n    tufte_variant: \"envisioned\"\n    highlight: github-dark\n    fig_height: 10\n    fig_width: 16\n    toc: true\n    toc_depth: 1\nexecute: \n  message: false\n  warning: false\nformat: \n  html:\n    code-fold: true\n    code-overflow: wrap\nengine: knitr\n---\n\n\n# Lab 3- Ordinal Regression\n\n## Instructions\n\n-   If you are fitting a model, display the model output in a neatly formatted table. (The `tidy` and `kable` functions can help!)\n\n-   If you are creating a plot, use clear labels for all axes, titles, etc.\n\n-   Commit and push your work to GitHub regularly, at least after each exercise. Write short and informative commit messages.\n\n-   When you're done, we should be able to knit the final version of the QMD in your GitHub as a HTML.\n\n# Lab\n\nI am a huge fan of Great British Bake-off. The data for this week's lab is taken from https://bakeoff.netlify.app/. In this lab you will be looking at `Gender` and `Age` as a predictor of technical rank. For this exercise, we will only be looking at those who were in top 3 of technical.\n\nIn the GBBO technical, the bakers are usually provided with a list of ingredients and basic instructions, but they may not have access to specific measurements or details on how to prepare the ingredients. The judges evaluate the bakers' finished products based on factors such as appearance, texture, and flavor, but also compare the bakers' results to a standard version of the recipe that has been prepared in advance by the judges or a baking expert.\n\nThe dataset contains 3 variables:\n\n-   `Gender`: M = MALE, F = FEMALE\n\n-   `Age`: Age of baker\n\n-   `Technical Rank`: Rank in technical (1,2,3)\n\n## Load packages:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(performance)\nlibrary(ordinal) #clm\nlibrary(car) # anova\nlibrary(ggeffects) #  viz\nlibrary(gofcat) # brant\nlibrary(brms)\nlibrary(emmeans) # contrasts\nlibrary(knitr)\n```\n:::\n\n\n## Load data\n\n-   Make sure only the top 3 ranks are being used. *For some reason, there are missing ranks (my guess is they did not announce rank on TV)*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngbbo <- read_csv(\"https://raw.githubusercontent.com/jgeller112/psy504-advanced-stats/main/slides/Ordinal_Regression/data/GBBO.csv\")\n\ngb <- gbbo %>%\n  filter(`Technical Rank` <=3) %>%\n  mutate(Rank = as.factor(`Technical Rank`))\n```\n:::\n\n\n## Explore\n\n-   Plot two figures showing the percentage of bakers in each rank--- create one for `Gender` and `Age`\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    gb %>% \n      ggplot( aes(x=Rank, y=Age) ) +\n        geom_boxplot(fill=\"#69b3a2\") +\n        xlab(\"Rank\")\n    ```\n    \n    ::: {.cell-output-display}\n    ![](ord_lab_ans_files/figure-html/unnamed-chunk-3-1.png){width=672}\n    :::\n    :::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(gb, aes(x=Gender, fill=Rank)) + geom_bar() \n```\n\n::: {.cell-output-display}\n![](ord_lab_ans_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Ordinal Analysis\n\n-   Convert the outcome variable to an ordered factor. What does the order here represent?\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    gb <- gb %>%\n      mutate(Rank = ordered(Rank))\n    \n    gb$Rank\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n      [1] 2 3 1 2 1 3 1 3 2 3 2 1 2 1 3 2 1 3 1 2 3 3 1 2 3 1 2 1 2 3 3 1 2 1 3 2 2\n     [38] 1 3 2 3 1 3 2 1 3 2 1 1 3 2 3 1 2 1 3 2 2 1 3 2 1 3 3 1 2 2 1 2 3 2 1 2 1\n     [75] 3 1 2 3 2 1 3 1 3 2 2 3 1 1 3 2 3 2 1 3 2 1 3 1 2 3 2 1 3 2 1 1 2 3 3 2 1\n    [112] 2 3 1 2 3 1 3 2 1 1 2 3 1 3 2 2 1 3 2 3 1 1 2 3 2 1 3 3 1 2 3 1 2 2 3 1 1\n    [149] 2 3 3 2 1 1 3 2 2 1 3 3 1 2 3 2 1 2 3 1 1 2 3 2 1 3 2 3 1 1 3 2 2 1 3 2 3\n    [186] 1 1 2 3 2 3 1 3 2 1 2 1 3 2 3 1 3 2 1 2 3 1 2 3 1 2 3 1 1 2 3 3 2 1 2 3 1\n    [223] 3 1 2 2 3 1 1 3 2 2 3 1 1 2 3 2 1 3 1 2 3 3 2 1 1 2 3 1 2 3 1 2 3 2 1 3 2\n    [260] 3 1 1 3 2 1 2 3 2 3 1 3 1 2 2 1 3 2 1 3 2 3 1 1 3 2 1 2 3 2 1 3 2 3 1 3 2\n    [297] 1 1 3 2 3 1 2 3 2 1 1 3 2\n    Levels: 1 < 2 < 3\n    ```\n    \n    \n    :::\n    :::\n\n\n    -   The model is ordered from 1st -3. You could also reverse this with ftc_rev. We can interpret this as positive slope = higher prob of being in 2-3rd place.\n\n-   Convert input variables to categorical factors as appropriate.\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    gb <- gb %>%\n      mutate(Gender=as.factor(Gender))\n    \n    contrasts(gb$Gender) <- c(-.5, .5)\n    ```\n    :::\n\n\n-   Run a ordinal logistic regression model against all relevant input variables. Interpret the effects for `Gender`, `Age` and `Gender*Age` (even if they are non-significant).\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    ols_clm = clm(Rank~Gender*Age, data=gb)\n    \n    tidy(ols_clm) %>%\n      kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    |term        |   estimate| std.error| statistic|   p.value|coef.type |\n    |:-----------|----------:|---------:|---------:|---------:|:---------|\n    |1&#124;2    | -0.8419558| 0.3422080| -2.460363| 0.0138797|intercept |\n    |2&#124;3    |  0.5796803| 0.3404226|  1.702826| 0.0886007|intercept |\n    |Gender1     | -1.1494724| 0.6729011| -1.708234| 0.0875930|location  |\n    |Age         | -0.0037139| 0.0092343| -0.402186| 0.6875471|location  |\n    |Gender1:Age |  0.0387873| 0.0185316|  2.093039| 0.0363456|location  |\n    \n    \n    :::\n    :::\n\n\n    ::: callout-note\n    -   Gender: Males more likely to place better in technical, *b* = -1.15, *SE* = .67, z = -1.71, *p* = 0.087. The log-odds of a baker achieving a higher rank as a male instead of a female is -1.149473 (95% CI \\[-2.46, 0.16\\]). Therefore, being male compared to being female is associated with a higher probability of achieving a higher rank. Converting this result to an odd ratio reveals that males are 0.32 times as likely to have a higher rank compared to female bakers (i.e.Â they are more likely to place higher in technical) (95% CI \\[0.08, 1.18\\]).\n\n    -   Age: An Increase in age results in increased log odds of placing better in technical, *b* = -0.004, *SE* = .009, z = -0.402, *p* = 0.688. Increase in age leads a decreases of odds by .997 of placing worse in technical.\n\n    -   Gender\\*Age: The effect of age on the log odds of achieving a better rank differs between genders, b = 0.038 (95% CI \\[0.002, 0.075\\]). Specifically, there is an increase in odds of achieving a better rank with age that is more pronounced for females than for males. Converting this result to an odd ratio reveals that the effect is 1.039 times more pronounced (95% CI \\[1.00, 1.07\\]).\n    :::\n\n-   Test if the interaction is warranted\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    ols_clm_main = clm(Rank~Gender+Age, data=gb)\n    \n    ols_clm_inter = clm(Rank~Gender*Age, data=gb)\n    \n    anova(ols_clm_main, ols_clm_inter) %>% kable()\n    ```\n    \n    ::: {.cell-output-display}\n    \n    \n    |              | no.par|      AIC|    logLik|  LR.stat| df| Pr(>Chisq)|\n    |:-------------|------:|--------:|---------:|--------:|--:|----------:|\n    |ols_clm_main  |      4| 685.7206| -338.8603|       NA| NA|         NA|\n    |ols_clm_inter |      5| 683.2836| -336.6418| 4.436959|  1|  0.0351688|\n    \n    \n    :::\n    :::\n\n\n-   It is!\n\n-   Use `ggemmeans` to create a figure showing the interaction between `Gender` and `Age` as a function of rank. Plot predicted probabilities from the model.\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    ggemmeans(ols_clm, terms= c(\"Age[all]\", \"Gender\")) %>%\n      plot()\n    ```\n    \n    ::: {.cell-output-display}\n    ![](ord_lab_ans_files/figure-html/unnamed-chunk-9-1.png){width=672}\n    :::\n    :::\n\n\n### Latent Visualization\n\n::: callout-note\nggeffects updated package to include latent viz.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nols_clm = MASS::polr(Rank~Gender*Age, data=gb)\n\nggeffect(ols_clm, c(\"Age[all]\", \"Gender\"), latent=TRUE) %>% plot()\n```\n\n::: {.cell-output-display}\n![](ord_lab_ans_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n-   Use the Brant test to support or reject the hypothesis that the proportional odds assumption holds for your simplified model.\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    brant.test(ols_clm)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    \n    Brant Test:\n                   chi-sq   df   pr(>chi)\n    Omnibus         1.295    3       0.73\n    Gender1         0.585    1       0.44\n    Age             0.415    1       0.52\n    Gender1:Age     0.924    1       0.34\n    \n    H0: Proportional odds assumption holds\n    ```\n    \n    \n    :::\n    :::\n\n\n    ## `brms`\n\n-   Reference the readings from this week and run the above model in `brms`. Do not worry about priors we will just use the default priors for this. You will notice there are no *p*-values (the horror!!!). Focus on the population-level effects from the output and look at the 95% credible intervals (if they don't include zero you can use this as an index of significance, or lack of). Are there any differences between the model you fit with `clm` and the one you fit with `brms`?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ols2_brm = brm(Rank ~  Gender*Age, data=gb, family = cumulative, cores = 4,chains = 4)\n```\n:::\n\n\n-   Use the `conditional_effects` function to plot predicted probabilities by Gender and Age across each rank. *Note: the papers use marginal_effects but that has been replaced with conditional_effects.*\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    conditional_effects(ols2_brm, categorical = T)\n    ```\n    \n    ::: {.cell-output-display}\n    ![](ord_lab_ans_files/figure-html/unnamed-chunk-13-1.png){width=672}\n    :::\n    \n    ::: {.cell-output-display}\n    ![](ord_lab_ans_files/figure-html/unnamed-chunk-13-2.png){width=672}\n    :::\n    :::\n\n\n-   Use `check_predictions` from the `easystats` `performance` package. It is useful for examining model fit (i.e., does the data fit the model being used?). Run the below code. What do you think?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_predictions(ols2_brm)\n```\n\n::: {.cell-output-display}\n![](ord_lab_ans_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "ord_lab_ans_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}